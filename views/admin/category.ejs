<%-include("../../views/partials/adminPartial/header")%>

  <style>
    body {
      background-color: #0f172a;
      color: #f1f5f9;
      font-family: 'Segoe UI', sans-serif;
    }

    .main-content {
      padding: 30px;
    }

    .card {
      background-color: #1e293b;
      border: none;
      padding: 20px;
      border-radius: 10px;
    }

    .table th,
    .table td {
      color: #f1f5f9;
      vertical-align: middle;
    }

    .btn-add {
      background-color: #22d3ee;
      color: #0f172a;
      border: none;
    }

    .btn-add:hover {
      background-color: #06b6d4;
    }

    .search-bar {
      background-color: #1e293b;
      border: none;
      color: #f1f5f9;
    }

    .search-bar::placeholder {
      color: #94a3b8;
    }

    .pagination .page-link {
      background-color: #1e293b;
      border: none;
      color: #f1f5f9;
    }

    .pagination .active>.page-link {
      background-color: #3b82f6;
      border-radius: 5px;
    }
  </style>
  </head>

  <body>

    <div class="main-content">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Categories</h2>
        <div>Admin</div>
      </div>

      <div class="d-flex justify-content-end mb-3">
        <a href="/admin/add-category" class="btn btn-add">ADD CATEGORY +</a>
      </div>
      <div class="mb-4">
        <input type="text" id="productSearch" class="form-control search-bar" placeholder="Search for Categories">
      </div>

      <div class="card">
        <table class="table">
          <thead>
            <tr>
              <th style="color: #000;">NO</th>
              <th style="color: #000;">CATEGORY</th>
              <th style="color: #000;">CATEGORY DESCRIPTION</th>
              <th style="color: #000;">OFFER(%)</th>
              <th style="color: #000;">ACTIONS</th>
            </tr>
          </thead>
          <tbody>
            <%if(categories){%>
              <% categories.forEach((category, index)=> { %>
                <tr>
                  <td class="text-start" style="color: #000;">
                    <%= index + 1 %>
                  </td>
                  <td class="text-start" style="color: #000;"><strong>
                      <%= category.name %>
                    </strong></td>
                  <td class="text-start" style="color: #000;">
                    <%= category.description %>
                  </td>
                  <td class="text-start" style="color: #000;">
                    <div>
                      <span><%= category.offer ? category.offer + '%' : '0%' %></span>
                      <div class="mt-2">
                        <% if (category.offer && category.offer > 0) { %>
                          <button class="btn btn-sm btn-warning me-1" onclick="editOffer('<%= category._id %>')">Edit Offer</button>
                          <button class="btn btn-sm btn-danger" onclick="removeOffer('<%= category._id %>')">Remove Offer</button>
                        <% } else { %>
                          <button class="btn btn-sm btn-success" onclick="addOffer('<%= category._id %>')">Add Offer</button>
                        <% } %>
                      </div>
                    </div>
                  </td>
                                  
                  <td>
                    <%if(category.status=="Unlisted" ){%>
                      <button class="btn btn-unlist btn-sm" style="background-color: green; color: #fff;"
                        onClick="Listed('<%=category._id%>','<%=category.name%>')">List</button>
                      <%}else{%>
                        <button class="btn btn-list btn-sm" style="background-color: rgb(255, 0, 0); color: #fff;"
                          onClick="Unlisted('<%=category._id%>','<%=category.name%>')">Unlist</button>
                        <%}%>
                          <a href="/admin/edit-category/<%= category._id %>" class="text-dark me-2"><i
                              class="bi bi-pencil"></i></a>
                  </td>
                </tr>
                <% }) %>
                  <%}%>

          </tbody>
        </table>

        <div class="d-flex justify-content-between align-items-center mt-3">
          <div style="color: #fff;">Showing 1 of <%= totalPages %>
          </div>rs
          <nav>
            <ul class="pagination mb-0">
              <li class="page-item <%= currentPage == 1 ? 'disabled' : '' %>">
                <a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= search %>">‹</a>
              </li>

              <% for (let i=1; i <=totalPages; i++) { %>
                <li class="page-item <%= currentPage == i ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= i %>&search=<%= search %>">
                    <%= i %>
                  </a>
                </li>
                <% } %>

                  <li class="page-item <%= currentPage == totalPages ? 'disabled' : '' %>">
                    <a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= search %>">›</a>
                  </li>
            </ul>
          </nav>

        </div>
      </div>

      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
      <script>

        document.getElementById('productSearch').addEventListener('keyup', function () {
          let searchValue = this.value.toLowerCase();
          let rows = document.querySelectorAll('tbody tr');

          rows.forEach(row => {
            let categoryName = row.children[1].textContent.toLowerCase();
            if (categoryName.includes(searchValue)) {
              row.style.display = '';
            } else {
              row.style.display = 'none';
            }
          });
        });

      

        function Unlisted(id, name) {
          Swal.fire({
            title: 'Unlisted',
            text: "do you want Unlist this Category?",
            icon: "warning",
            showConfirmButton: true,
            showCancelButton: true
          }).then((result) => {
            if (result.isConfirmed) {
              axios.patch("/admin/Unlist-category", { id })
                .then(function (responce) {
                  if (responce.data.success) {
                    Swal.fire({
                      title: `${name} unlisted`,
                      icon: 'success',
                      showConfirmButton: false,
                      timer: 1500
                    }).then(() => {
                      window.location.reload()
                    })
                  }
                })
            }
          })
        }

        function Listed(id, name) {
          Swal.fire({
            tittle: "List the Category",
            text: "do you want list the user",
            icon: "warning",
            showConfirmButton: true,
            showCancelButton: true
          }).then((result) => {
            if (result.isConfirmed) {
              axios.patch("/admin/list-category", { id })
                .then(function (responce) {
                  if (responce.data.success) {
                    Swal.fire({
                      title: `${name} listed`,
                      icon: 'success',
                      showConfirmButton: false,
                      timer: 1500
                    }).then(() => {
                      window.location.reload()
                    })
                  }
                })
            }
          })
        }

        function removeOffer(categoryId) {
  Swal.fire({
    title: 'Remove Offer',
    text: "Are you sure you want to remove this offer?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "Yes, remove it"
  }).then((result) => {
    if (result.isConfirmed) {
      axios.post("/admin/remove-category-offer", { id: categoryId })
        .then(response => {
          if (response.data.success) {
            Swal.fire({
              title: 'Offer Removed',
              icon: 'success',
              showConfirmButton: false,
              timer: 1500
            }).then(() => {
              window.location.reload();
            });
          }
        });
    }
  });
}

async function addOffer(categoryId) {
    const { value: offer } = await Swal.fire({
      title: 'Add Offer',
      input: 'number',
      inputLabel: 'Enter Offer Percentage',
      inputPlaceholder: '%',
      inputAttributes: {
        min: 1,
        max: 99,
        step: 1
      },
      showCancelButton: true,
      confirmButtonText: 'Add Offer',
      preConfirm: (value) => {
        if (!value || value <= 0 || value >= 100) {
          Swal.showValidationMessage('Please enter a valid percentage (1–99)');
        }
        return value;
      }
    });

    if (offer) {
      try {
        const response = await axios.post('/admin/add-category-offer', {
          id: categoryId,
          offer: offer
        });

        if (response.data.success) {
          Swal.fire({
            title: 'Offer Added!',
            text: `Offer of ${offer}% added successfully.`,
            icon: 'success',
            showConfirmButton: false,
            timer: 1500
          }).then(() => {
            window.location.reload();
          });
        } else {
          Swal.fire('Error', 'Failed to add offer.', 'error');
        }
      } catch (error) {
        console.error('Error adding offer:', error);
        Swal.fire('Error', 'Something went wrong while adding the offer.', 'error');
      }
    }
  }
  async function editOffer(categoryId) {
  try {
    const response = await axios.get(`/admin/get-category-offer/${categoryId}`);
    const currentOffer = response.data.offer || 0;

    const { value: newOffer } = await Swal.fire({
      title: 'Edit Offer',
      input: 'number',
      inputLabel: 'Update Offer Percentage',
      inputValue: currentOffer,
      inputPlaceholder: '%',
      inputAttributes: {
        min: 1,
        max: 99,
        step: 1
      },
      showCancelButton: true,
      confirmButtonText: 'Update Offer',
      preConfirm: (value) => {
        if (!value || value <= 0 || value >= 100) {
          Swal.showValidationMessage('Please enter a valid percentage (1–99)');
        }
        return value;
      }
    });

    if (newOffer !== undefined) {
      const updateRes = await axios.patch('/admin/edit-category-offer', {
        id: categoryId,
        offer: newOffer
      });

      if (updateRes.data.success) {
        Swal.fire({
          title: 'Offer Updated!',
          text: `New offer of ${newOffer}% saved successfully.`,
          icon: 'success',
          showConfirmButton: false,
          timer: 1500
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire('Error', 'Failed to update offer.', 'error');
      }
    }
  } catch (error) {
    console.error(error);
    Swal.fire('Error', 'Something went wrong while editing the offer.', 'error');
  }
}

      </script>
  </body>

  </html>