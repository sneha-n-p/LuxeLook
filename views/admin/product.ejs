<%-include("../../views/partials/adminPartial/header")%>

    <style>
        body {
            background-color: #0f172a;
            color: #f1f5f9;
            font-family: 'Segoe UI', sans-serif;
        }

        .main-content {
            padding: 30px;
        }

        .table {
            color: #f1f5f9;
        }

        .table th,
        .table td {
            vertical-align: middle;
        }

        .table thead th {
            background-color: #1e293b;
            border-bottom: 2px solid #334155;
        }

        .table tbody tr {
            background-color: #1e293b;
            border-bottom: 1px solid #334155;
        }

        .btn-add-product {
            background-color: #22d3ee;
            color: #0f172a;
            border: none;
            padding: 8px 20px;
            border-radius: 6px;
        }

        .btn-add-product:hover {
            background-color: #06b6d4;
        }

        .status-listed {
            background-color: #22c55e;
            color: #fff;
            border: none;
            padding: 6px 14px;
            border-radius: 6px;
        }

        .status-unlisted {
            background-color: #ef4444;
            color: #fff;
            border: none;
            padding: 6px 14px;
            border-radius: 6px;
        }

        .search-bar {
            background-color: #1e293b;
            border: none;
            color: #f1f5f9;
        }

        .search-bar::placeholder {
            color: #cbd5e1;
        }

        .pagination .page-link {
            background-color: #1e293b;
            color: #f1f5f9;
            border: none;
        }

        .pagination .page-link.active {
            background-color: #22d3ee;
            color: #0f172a;
        }
    </style>
    </head>

    <body>
        <div class="main-content">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3>Products</h3>
                <a href="/admin/add-product" class="btn btn-add" style="background-color: #06b6d4;">ADD PRODUCT +</a>
            </div>

            <div class="mb-4">
                <input type="text" id="productSearch" class="form-control search-bar" placeholder="Search for Products">
            </div>

            <table class="table table-hover table-borderless">
                <thead>
                    <tr>
                        <th>NO</th>
                        <th>IMAGE</th>
                        <th>NAME</th>
                        <th>DESCRIPTION</th>
                        <th>CATEGORY</th>
                        <th>REGULAR(₹)</th>
                        <th>SALE(₹)</th>
                        <th>OFFER</th>
                        <th>STOCK</th>
                        <th>ACTION</th>
                    </tr>
                </thead>
                <tbody>
                    <% products.forEach(function(product,index) { %>
                        <tr>
                            <td style="color: #000;"><%= index+1 %>
                            </td>
                            <td>
                                <img src="<%= product.productImage[0] %>" alt="Product Image" width="45" height="60"
                                    style="object-fit: cover; border-radius: 4px;">
                            </td>
                            <td style="color: #000;">
                                <%= product.productName %>
                            </td>
                            <td style="color: #000;">
                                <%= product.description %>
                            </td>
                            <td style="color: #000;">
                                <%= product.category.name %>
                            </td>
                            <td style="color: #000000;">₹ 
                              <%=product.regularPrice %>
                            </td>
                            <td style="color: #000000;"> 
                              <select>
                                <%for(let i=0;i<product.variant.length;i++){%>
                                  <option><%= product.variant[i].size%>:₹<%= product.variant[i].salePrice%></option>
                                  <%}%>
                              </select>
                            </td>
                            
                            <td class="text-start" style="color: #000;">
                                <div>
                                  <span><%= product.productOffer ? product.productOffer + '%' : '0%' %></span>
                                  <div class="mt-2">
                                    <% if (product.productOffer && product.productOffer > 0) { %>
                                      <button class="btn btn-sm btn-warning me-1" onclick="editOffer('<%= product._id %>')">Edit Offer</button>
                                      <button class="btn btn-sm btn-danger" onclick="removeOffer('<%= product._id %>')">Remove Offer</button>
                                    <% } else { %>
                                      <button class="btn btn-sm btn-success" onclick="addOffer('<%= product._id %>')">Add Offer</button>
                                    <% } %>
                                  </div>
                                </div>
                              </td>
                            <td style="color: #000;">
                                <%= product.quatity %>
                            </td>

                            <td>

                                <button class="btn btn-sm btn-outline-light"><a class="bi bi-pencil"
                                        href="/admin/edit-product/<%=product._id%>"></a></button>
                                <%if(product.isBlocked===false){%>
                                    <button class="btn btn-danger">
                                        <a href="#"
                                            onclick="confirmBlockProduct(event, '<%= product._id.toString() %>')"
                                            class="text-white" style="text-decoration: none;">Block</a>
                                    </button>
                                    <%} else{%>
                                        <button class="btn btn-success">
                                            <a href="#"
                                                onclick="confirmUnblockProduct(event, '<%= product._id.toString() %>')"
                                                class="text-white" style="text-decoration: none;">Unblock</a>
                                        </button>
                                        <%}%>
                            </td>
                        </tr>
                        <% }) %>
                </tbody>
            </table>

            <div class="d-flex justify-content-between align-items-center mt-3">
                <div style="color: #fff;">Showing 1 of <%= totalPages %>
                </div>
                <nav>
                    <ul class="pagination mb-0">
                        <li class="page-item <%= currentPage == 1 ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= search %>">‹</a>
                        </li>

                        <% for (let i=1; i <=totalPages; i++) { %>
                            <li class="page-item <%= currentPage == i ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>&search=<%= search %>">
                                    <%= i %>
                                </a>
                            </li>
                            <% } %>

                                <li class="page-item <%= currentPage == totalPages ? 'disabled' : '' %>">
                                    <a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= search %>">›</a>
                                </li>
                    </ul>
                </nav>

            </div>
        </div>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script>

            document.getElementById('productSearch').addEventListener('keyup', function () {


                let searchValue = this.value.toLowerCase();
                let rows = document.querySelectorAll('tbody tr');

                rows.forEach(row => {
                    let productName = row.children[2].textContent.toLowerCase();
                    if (productName.includes(searchValue)) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });




            function confirmBlockProduct(event, productId) {
                event.preventDefault();
                Swal.fire({
                    title: "Are you sure?",
                    text: "You are about to block this product!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Yes, Block!",
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/blockProduct?id=${productId}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ id: productId })
                        })
                            .then((response) => response.json())
                            .then((data) => {
                                if (data.success) {
                                    Swal.fire({
                                        title: 'Success!',
                                        text: data.message,
                                        icon: 'success'
                                    }).then(() => {
                                        location.reload()
                                    })
                                } else {
                                    Swal.fire({
                                        title: 'Failed!',
                                        text: data.message,
                                        icon: 'error'
                                    }).then(() => {
                                        location.reload()
                                    })
                                }
                            })
                            .catch((error) => {
                                console.error("error occur on blocking ajax", error)
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'Something went wrong in server Side',
                                    icon: 'error'
                                })
                            })
                    }
                });
            }

            function confirmUnblockProduct(event, productId) {
                event.preventDefault();
                Swal.fire({
                    title: "Are you sure?",
                    text: "You are about to unblock this product!",
                    icon: "info",
                    showCancelButton: true,
                    confirmButtonColor: "#28a745",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Yes, Unblock!",
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/unblockProduct?id=${productId}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ id: productId })
                        })
                            .then((response) => response.json())
                            .then((data) => {
                                if (data.success) {
                                    Swal.fire({
                                        title: 'Success!',
                                        text: data.message,
                                        icon: 'success'
                                    }).then(() => {
                                        location.reload()
                                    })
                                } else {
                                    Swal.fire({
                                        title: 'Failed!',
                                        text: data.message,
                                        icon: 'error'
                                    }).then(() => {
                                        location.reload()
                                    })
                                }
                            }).catch((error) => {
                                console.error("error occur on unblocking ajax", error)
                                Swal.fire({
                                    title: 'Error!',
                                    text: 'something went wrong on serverSide',
                                    icon: 'error'
                                })
                            })
                    }
                });
            }

            function removeOffer(categoryId) {
  Swal.fire({
    title: 'Remove Offer',
    text: "Are you sure you want to remove this offer?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "Yes, remove it"
  }).then((result) => {
    if (result.isConfirmed) {
      axios.post("/admin/remove-product-offer", { id: categoryId })
        .then(response => {
          if (response.data.success) {
            Swal.fire({
              title: 'Offer Removed',
              icon: 'success',
              showConfirmButton: false,
              timer: 1500
            }).then(() => {
              window.location.reload();
            });
          }
        });
    }
  });
}

async function addOffer(productId) {
  const { value: offer } = await Swal.fire({
    title: 'Add Offer',
    input: 'number',
    inputLabel: 'Enter Offer Percentage',
    inputPlaceholder: '%',
    inputAttributes: {
      min: 1,
      max: 99,
      step: 1
    },
    showCancelButton: true,
    confirmButtonText: 'Add Offer',
    preConfirm: (value) => {
      if (!value || value <= 0 || value >= 100) {
        Swal.showValidationMessage('Please enter a valid percentage (1–99)');
      }
      return value;
    }
  });

  if (offer) {
    try {
      const response = await axios.post('/admin/add-product-offer', {
        id: productId,
        offer: offer
      });

      if (response.data.success) {
        Swal.fire({
          title: 'Offer Added!',
          text: `Final Offer: ${response.data.finalOffer}%. Sale Price: ₹${response.data.salePrice}`,
          icon: 'success',
          showConfirmButton: false,
          timer: 1500
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire('Error', 'Failed to add offer.', 'error');
      }
    } catch (error) {
      console.error('Error adding offer:', error);
      Swal.fire('Error', 'Something went wrong while adding the offer.', 'error');
    }
  }
}

  async function editOffer(categoryId) {
  try {
    const response = await axios.get(`/admin/get-product-offer/${categoryId}`);
    const currentOffer = response.data.offer || 0;

    const { value: newOffer } = await Swal.fire({
      title: 'Edit Offer',
      input: 'number',
      inputLabel: 'Update Offer Percentage',
      inputValue: currentOffer,
      inputPlaceholder: '%',
      inputAttributes: {
        min: 1,
        max: 99,
        step: 1
      },
      showCancelButton: true,
      confirmButtonText: 'Update Offer',
      preConfirm: (value) => {
        if (!value || value <= 0 || value >= 100) {
          Swal.showValidationMessage('Please enter a valid percentage (1–99)');
        }
        return value;
      }
    });

    if (newOffer !== undefined) {
      const updateRes = await axios.patch('/admin/edit-product-offer', {
        id: categoryId,
        offer: newOffer
      });

      if (updateRes.data.success) {
        Swal.fire({
          title: 'Offer Updated!',
          text: `New offer of ${newOffer}% saved successfully.`,
          icon: 'success',
          showConfirmButton: false,
          timer: 1500
        }).then(() => {
          window.location.reload();
        });
      } else {
        Swal.fire('Error', 'Failed to update offer.', 'error');
      }
    }
  } catch (error) {
    console.error(error);
    Swal.fire('Error', 'Something went wrong while editing the offer.', 'error');
  }
}


        </script>

    </body>

  