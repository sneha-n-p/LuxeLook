<%-include("../../views/partials/userPartial/header")%>

    

    <style>
        body {
            background: #f4f4f4;
            font-family: 'Poppins', sans-serif;
            color: #1a1a1a;
        }

        .banner {
            height: 495px;
            background: #000;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* .banner h1 {
    color: #fff;
    font-size: 3.2rem;
    font-weight: 700;
    letter-spacing: 1px;
} */

        .cart-table {
            background: #F2E8DC;
            border-radius: 12px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
            overflow: hidden;
        }

        .cart-table th {
            background: #000;
            color: #fff;
            padding: 16px;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .cart-table td {
            vertical-align: middle;
            padding: 20px 14px;
            font-size: 14px;
        }

        .cart-product-img {
            height: 110px;
            width: 90px;
            object-fit: cover;
            border-radius: 10px;
            border: 1px solid #ccc;
        }

        .quantity-input {
            width: 60px;
            padding: 6px;
            border: 1px solid #333;
            border-radius: 6px;
            text-align: center;
            background: #F2E8DC;
            color: #000;
        }

        .cart-totals-box {
            border-radius: 14px;
            padding: 28px;
            background: #F2E8DC;
            box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);
        }

        .cart-totals-box h5 {
            font-size: 17px;
            font-weight: 600;
            color: #000;
        }

        .cart-totals-box span {
            font-size: 14px;
        }

        .checkout-btn {
            background: linear-gradient(90deg, #B5654B, #D17C63);
            color: #fff;
            border: none;
            padding: 12px 36px;
            border-radius: 30px;
            font-weight: 600;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        .checkout-btn:hover {
            background: #333;
        }

        .btn-outline-dark {
            border-radius: 35px;
            padding: 8px 22px;
            font-size: 0.9rem;
            background: #fff;
            color: #000;
            border: 2px solid #000;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .btn-outline-dark:hover {
            background: #000;
            color: #fff;
        }

        .btn-dark {
            background: #000;
            border: none;
            color: #fff;
            padding: 10px 24px;
            border-radius: 30px;
            transition: all 0.3s ease;
        }

        .btn-dark:hover {
            background: #333;
            color: #fff;
        }

        .btn-danger {
            background-color: #dc3545;
            border: none;
            color: #fff;
            padding: 6px 14px;
            border-radius: 25px;
            font-size: 14px;
            transition: all 0.3s ease;
        }

        .btn-danger:hover {
            background-color: #c82333;
        }

        .Empty-cart {
            text-align: center;
            padding: 80px 20px;
        }

        .Empty-cart span {
            font-size: 26px;
            font-weight: 600;
            color: #444;
        }

        .Empty-cart button {
            background-color: #000;
            color: #fff;
            border: none;
            padding: 10px 28px;
            border-radius: 30px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .Empty-cart button:hover {
            background-color: #333;
        }

        .text-danger {
            color: red;
        }

        .small {
            font-size: 12px;
        }

        .hero h1 {
            color: #ffffff;
            text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.4);
        }

        .table th,
        .table td {
            vertical-align: middle !important;
        }
    </style>
    <section class="hero text-center bg-light p-0 mb-4">
        <img src="/wallpaper/wall4.jpg" alt="Shop Banner" class="img-fluid w-100 "
            style="height: 600px; object-fit: cover;">
        <h1 class="position-absolute top-50 start-50 translate-middle text-white fw-bold display-4 shadow-lg"
            style="text-shadow: 2px 2px 8px black; margin-bottom:50% ">CART</h1>
    </section>

    <div class="container my-5 ">
        <% if (cart.length> 0) { %>
            <table class="table cart-table text-center ">
                <thead>
                    <tr>
                        <th></th>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Size</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    <% for (let product of cart) { const quantity=product.quantity < 1 ? 1 : product.quantity; const
                        price=product.price; const size=product.size; const totalPrice=product.totalPrice;
                        const matchingVariant=product.productId.variant.find(v=> v.size === size);
                        const available = matchingVariant ? matchingVariant.quantity : 0;
                        %>
                        <tr>
                            <td>
                                <a href="/product-details/<%= product.productId._id %>">
                                    <img src="<%= product.productId.productImage[0] %>" class="cart-product-img"
                                        alt="Product Image">
                                </a>
                            </td>
                            <td>
                                <strong>
                                    <%= product.productId.productName %>
                                </strong><br>
                                <small>
                                    <%= product.productId.description %>
                                </small>
                            </td>
                            <td>‚Çπ<%= price %>
                            </td>
                            <td>
                                <%= product.size %>
                            </td>
                            <td>
                                <% if (available <=0) { %>
                                    <input type="number" value="0" class="quantity-input"
                                        data-id="<%= product.productId._id %>" disabled>
                                    <div class="text-danger small mt-1">Out of stock! Max available: 0</div>
                                    <% } else { %>
                                        <input type="number" value="<%= quantity %>" min="1" max="<%= available %>"
                                            class="quantity-input" data-id="<%= product.productId._id %>"
                                            data-price="<%= price %>" data-max="<%= available %>">
                                        <% } %>
                            </td>
                            <td class="product-total">
                                ‚Çπ<span class="price-text">
                                    <%= price * quantity %>
                                </span>
                            </td>
                            <td>
                                <button onclick="confirmRemove('<%= product.productId._id %>')"
                                    class="btn btn-sm btn-danger">üóëÔ∏è Remove</button>
                            </td>
                        </tr>
                       
                       

                        <% } %>
                </tbody>
            </table>

            <div class="row mt-5">
                <div class="col-md-6 offset-md-6">
                    <div class="cart-totals-box">
                        <h5>CART TOTALS</h5>
                        <div class="d-flex justify-content-between mt-3">
                            <span>Subtotal</span>
                            <span id="subTotal">‚Çπ<%= subTotal %></span>
                        </div>
                        <div class="d-flex justify-content-between mt-2">
                            <span>Discount</span>
                            <span>‚Çπ0</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between">
                            <strong>TOTAL</strong>
                            <strong id="finalTotal">‚Çπ<%= subTotal %></strong>
                        </div>
                    </div>
                    <div class="text-center mt-4">
                        <button id="proceedCheckout" class="checkout-btn">Proceed to Checkout</button>
                    </div>
                </div>
            </div>

            <% } else { %>
                <div class="Empty-cart">
                    <span>Your Cart Is Empty</span><br><br>
                    <a href="/shop"><button>Discover Now</button></a>
                </div>
                <% } %>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            recalculateSubtotal();
        });

        function confirmRemove(productId) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, remove it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    axios.post('/removeFromCart', { productId })
                        .then(response => {
                            if (response.data.success) {
                                Swal.fire({
                                    icon: "success",
                                    title: "Removed!",
                                    text: "Product removed from Cart.",
                                    showConfirmButton: false,
                                    timer: 1200
                                }).then(() => {
                                    window.location.reload();
                                });
                            }
                        })
                        .catch(error => {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong while removing the product!"
                            });
                        });
                }
            });
        }

        document.querySelectorAll(".quantity-input").forEach(input => {
            input.addEventListener("input", function () {
                const row = this.closest("tr");
                const price = parseInt(this.getAttribute('data-price'));
                const max = parseInt(this.getAttribute('data-max'));
                let quantity = parseInt(this.value);

                const limit = max < 5 ? max : 5;

                if (quantity > limit) {
                    this.value = limit;
                    quantity = limit;

                    Swal.fire({
                        icon: "warning",
                        title: "Limit Exceeded",
                        text: max < 5
                            ? `Only ${max} item(s) available in stock.`
                            : "Only 5 quantity per product allowed at a time.",
                        showConfirmButton: false,
                        timer: 2000
                    });
                } else if (quantity < 1 || isNaN(quantity)) {
                    this.value = 1;
                    quantity = 1;
                }

                const productTotal = price * quantity;
                row.querySelector(".price-text").textContent = productTotal;

                recalculateSubtotal();
            });
        });


        function recalculateSubtotal() {
            let subtotal = 0;
            document.querySelectorAll(".cart-table tbody tr").forEach(row => {
                const input = row.querySelector(".quantity-input");
                if (!input || input.disabled) return;

                const qty = parseInt(input.value);
                const price = parseInt(input.getAttribute("data-price"));

                if (!isNaN(qty) && !isNaN(price)) {
                    subtotal += price * qty;
                }
            });

            document.getElementById("subTotal").textContent = `‚Çπ${subtotal}`;
            document.getElementById("finalTotal").textContent = `‚Çπ${subtotal}`;
        }

        document.getElementById("proceedCheckout")?.addEventListener("click", function () {
            const cartItems = [];
            document.querySelectorAll(".quantity-input").forEach(input => {
                if (!input.disabled) {
                    cartItems.push({
                        productId: input.getAttribute("data-id"),
                        quantity: parseInt(input.value),
                        price: parseInt(input.getAttribute("data-price"))
                    });
                } else {
                    cartItems.push({
                        productId: input.getAttribute("data-id"),
                        quantity: parseInt(input.value),
                        price: parseInt(input.getAttribute("data-price"))
                    });
                }
            });

            axios.post('/cart', { cartItems })
                .then(response => {
                    if (response.data.success) {
                        window.location.href = "/checkout";
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "Error!",
                            text: response.data.message
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "Something went wrong!"
                    });
                });
        });
    </script>

    <%-include("../../views/partials/userPartial/footer")%>